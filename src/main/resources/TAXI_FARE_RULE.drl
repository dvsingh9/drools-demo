import me.dvsingh.drools.model.TaxiRide;
import me.dvsingh.drools.model.Fare;
import java.util.*;

global me.dvsingh.drools.model.Fare rideFare;
dialect  "mvel"

rule "Calculate Taxi Fare - Scenario 1"
    when
        taxiRideInstance:TaxiRide(isNightSurcharge == false && distanceInMile < 10);
    then
       	rideFare.setNightSurcharge(0l);
       	rideFare.setRideFare(70l);
end

rule "Calculate Taxi Fare - Scenario 2"
    when
        taxiRideInstance:TaxiRide(isNightSurcharge == true && distanceInMile < 10);
    then
       	rideFare.setNightSurcharge(30l);
       	rideFare.setRideFare(70l);
end


rule "Calculate Taxi Fare - Scenario 3"
    when
        taxiRideInstance:TaxiRide(isNightSurcharge == false && distanceInMile >= 10 && distanceInMile < 100);
    then
       	rideFare.setNightSurcharge(0l);
       	rideFare.setRideFare(70+(2*taxiRideInstance.getDistanceInMile()));
end


rule "Calculate Taxi Fare - Scenario 4"
    when
        taxiRideInstance:TaxiRide(isNightSurcharge == true && distanceInMile >= 10 && distanceInMile < 100);
    then
       	rideFare.setNightSurcharge(30+taxiRideInstance.getDistanceInMile());
       	rideFare.setRideFare(70+(2*taxiRideInstance.getDistanceInMile()));
end


//rule "Calculate Taxi Fare - Scenario 5"
//    when
//        taxiRideInstance:TaxiRide(isNightSurcharge == false && distanceInMile >= 100);
//    then
//       	rideFare.setNightSurcharge(0l);
//       	rideFare.setRideFare(70+(1.5*taxiRideInstance.getDistanceInMile()));
//end
//
//rule "Calculate Taxi Fare - Scenario 6"
//    when
//        taxiRideInstance:TaxiRide(isNightSurcharge == true && distanceInMile >= 100);
//    then
//       	rideFare.setNightSurcharge(30+taxiRideInstance.getDistanceInMile());
//       	rideFare.setRideFare(70+(1.5*taxiRideInstance.getDistanceInMile()));
//end